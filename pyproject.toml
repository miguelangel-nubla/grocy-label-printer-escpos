[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "grocy-label-printer-escpos"
version = "0.6.2"
description = "Flask server that receives Grocy label requests and prints to ESC/P thermal printers"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Miguel Angel Nubla", email = "miguelangel@nubla.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
keywords = ["grocy", "thermal", "printer", "label", "escpos"]
requires-python = ">=3.8"
dependencies = [
    "flask>=2.0.0",
    "pillow>=8.0.0",
    "python-escpos>=3.0.0",
    "qrcode[pil]>=7.0.0",
    "font-roboto>=0.0.1",
    "gunicorn>=20.0.0",
    "python-dotenv>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/miguelangel-nubla/grocy-label-printer-escpos"
Repository = "https://github.com/miguelangel-nubla/grocy-label-printer-escpos"
Issues = "https://github.com/miguelangel-nubla/grocy-label-printer-escpos/issues"

[project.scripts]
grocy-label-printer-escpos = "grocy_label_printer_escpos.server:main"

[tool.hatch.version]
path = "src/grocy_label_printer_escpos/__init__.py"

[tool.black]
line-length = 79
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 79

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=grocy_label_printer_escpos",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/grocy_label_printer_escpos/__init__.py:__version__"]
build_command = "pip install build && python -m build"
dist_path = "dist/"
upload_to_pypi = true
upload_to_release = true
remove_dist = false
commit_subject = "chore(release): {version}"
commit_message = "chore(release): {version}\n\nAutomatically generated by python-semantic-release"
tag_format = "v{version}"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
